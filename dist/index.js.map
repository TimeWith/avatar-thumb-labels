{"version":3,"sources":["../src/index.js"],"names":["AvatarThumbLabels","props","src","firstName","lastName","secondLabel","style","bgColor","radius","fontSize","color","FirstLabel","p","display","marginTop","marginBottom","lineHeight","fontWeight","textAlign","SecondLabel","avatarStyle","RootDIV","div","verticalAlign","TextDIV","marginRight"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,iB;;;;;;;;;;;6BAEV;AAAA,mBAEkD,KAAKC,KAFvD;AAAA,UAECC,GAFD,UAECA,GAFD;AAAA,UAEMC,SAFN,UAEMA,SAFN;AAAA,UAEiBC,QAFjB,UAEiBA,QAFjB;AAAA,UAE2BC,WAF3B,UAE2BA,WAF3B;AAAA,UAEwCC,KAFxC,UAEwCA,KAFxC;AAAA,oBAIoC,KAAKL,KAJzC;AAAA,UAIDM,OAJC,WAIDA,OAJC;AAAA,UAIQC,MAJR,WAIQA,MAJR;AAAA,UAIgBC,QAJhB,WAIgBA,QAJhB;AAAA,UAI0BC,KAJ1B,WAI0BA,KAJ1B;;AAKP,UAAI,CAACH,OAAL,EAAc;AAAEA,kBAAU,SAAV;AAAoB;AACpC,UAAI,CAACE,QAAL,EAAe;AAAEA,mBAAW,MAAX;AAAkB;AACnC,UAAI,CAACD,MAAL,EAAa;AAAEA,iBAAS,MAAT;AAAgB;AAC/B,UAAI,CAACE,KAAL,EAAY;AAAEA,gBAAQ,SAAR;AAAkB;;AAEhC,UAAMC,aAAa,iBAAOC,CAAP,CAAS;AAC1BF,eAAUA,KAAV,gBAD0B;AAE1BG,iBAAS,kBAFiB;AAG1BC,mBAAW,gBAHe;AAI1BC,sBAAc,cAJY;AAK1BC,oBAAY,iBALc;AAM1BP,kBAAU,iBANgB;AAO1BQ,oBAAY,iBAPc;AAQ1BC,mBAAW;AARe,OAAT,CAAnB;;AAWA,UAAMC,cAAc,iBAAOP,CAAP;AAClBF,eAAUA,KAAV,gBADkB;AAElBG,iBAAS,kBAFS;AAGlBJ,kBAAU,iBAHQ;AAIlBO,oBAAY,iBAJM;AAKlBD,sBAAc;AALI,uBAMN,iBANM,EAApB;;AASA,aACE;AAAC,eAAD;AAAA,UAAS,OAAQT,KAAjB;AACE;AACE,eAAMJ,GADR;AAEE,qBAAYC,SAFd;AAGE,oBAAWC,QAHb;AAIE,mBAAUG,OAJZ;AAKE,kBAASC,MALX;AAME,oBAAWC,QANb;AAOE,iBAAQC,KAPV;AAQE,iBAAQU;AARV,UADF;AAWE;AAAC,iBAAD;AAAA;AACE;AAAC,sBAAD;AAAA;AAAiBjB,qBAAjB,SAA8BC;AAA9B,WADF;AAEIC,wBAAc;AAAC,uBAAD;AAAA;AAAeA;AAAf,WAAd,GAA2D;AAF/D;AAXF,OADF;AAkBD;;;;;;kBAlDkBL,iB;;;AAsDrB,IAAMqB,UAAU,iBAAOC,GAAP,CAAW;AACzBT,WAAS,cADgB;AAEzBU,iBAAe;AAFU,CAAX,CAAhB;;AAKA,IAAMC,UAAU,iBAAOF,GAAP,CAAW;AACzBT,WAAS,cADgB;AAEzBU,iBAAe;AAFU,CAAX,CAAhB;;AAKA,IAAMH,cAAc;AAClBP,WAAS,cADS;AAElBU,iBAAe,KAFG;AAGlBE,eAAa;AAHK,CAApB","file":"index.js","sourcesContent":["import React, { Component } from 'react'\nimport styled from '@emotion/styled'\nimport AvatarThumb from '@time-with/avatar-thumb'\n\nexport default class AvatarThumbLabels extends Component {\n\n  render() {\n\n    const { src, firstName, lastName, secondLabel, style } = this.props\n    \n    let { bgColor, radius, fontSize, color } = this.props\n    if (!bgColor) { bgColor = '#7DCE82'}\n    if (!fontSize) { fontSize = '18px'}\n    if (!radius) { radius = '45px'}\n    if (!color) { color = '#7D7B7B'}\n\n    const FirstLabel = styled.p({\n      color: `${color} !important`,\n      display: 'block !important',\n      marginTop: '2px !important',\n      marginBottom: '0 !important',\n      lineHeight: '21px !important',\n      fontSize: '18px !important',\n      fontWeight: 'bold !important',\n      textAlign: 'left !important',\n    })\n\n    const SecondLabel = styled.p({\n      color: `${color} !important`,\n      display: 'block !important',\n      fontSize: '14px !important',\n      lineHeight: '18px !important',\n      marginBottom: '0 !important',\n      lineHeight: '21px !important',\n    })\n\n    return (\n      <RootDIV style={ style }>\n        <AvatarThumb\n          src={ src }\n          firstName={ firstName }\n          lastName={ lastName }\n          bgColor={ bgColor }\n          radius={ radius }\n          fontSize={ fontSize }\n          color={ color }\n          style={ avatarStyle }\n        />\n        <TextDIV>\n          <FirstLabel>{ `${firstName} ${lastName}` }</FirstLabel>\n          { secondLabel ? <SecondLabel>{ secondLabel }</SecondLabel> : null}\n        </TextDIV>\n      </RootDIV>\n    )\n  }\n}\n\n\nconst RootDIV = styled.div({\n  display: 'inline-block',\n  verticalAlign: 'top',\n})\n\nconst TextDIV = styled.div({\n  display: 'inline-block',\n  verticalAlign: 'top',\n})\n\nconst avatarStyle = {\n  display: 'inline-block',\n  verticalAlign: 'top',\n  marginRight: '10px',\n}\n"]}